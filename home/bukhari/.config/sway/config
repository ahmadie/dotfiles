## Default config for sway

focus output eDP-1

set $cl_high #ed812d
set $cl_fore2 #FFDCCA
set $cl_indi #d9d8d8
set $cl_back #3B3B3B
set $cl_fore #E0D5D5
set $cl_urge #ee2e24

# Colors                border   bg       text     indi     childborder
client.focused          $cl_high $cl_high $cl_fore2 $cl_indi $cl_high
client.focused_inactive $cl_back $cl_back $cl_fore  $cl_back $cl_back
client.unfocused        $cl_back $cl_back $cl_fore  $cl_back $cl_back
client.urgent           $cl_urge $cl_urge $cl_fore  $cl_urge $cl_urge

# Window borders
default_border pixel 3
default_floating_border normal
hide_edge_borders smart
# focus_follows_mouse no
focus_on_window_activation urgent

titlebar_padding 5 1
title_align center

smart_gaps on
gaps inner 10

#opacity
exec python3 ~/.config/sway/swayfader.py
# exec python3 ~/sway-src/inactive-windows-transparency/inactive-windows-transparency.py
exec python3 ~/.config/sway/autoname-workspaces.py --logfile=".config/sway/autoname-workspaces.log"

#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
exec "systemctl --user import-environment; systemctl --user start sway-session.target"
Xwayland enable
# gaps inner 10
# gaps horizontal 10
# gaps top -5 
# gaps bottom 10
seat seat0 xcursor_theme 'Adwaita' 32
# exec_always {
#  gsettings set org.gnome.desktop.interface text-scaling-factor 1.5 
#  gsettings set org.gnome.desktop.interface cursor-theme 'Adwaita'  
#  gsettings set org.gnome.desktop.interface cursor-size 42  
#  gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'  
#  gsettings set org.gnome.desktop.interface icon-theme 'Adwaita'  
# }
font pango:Ubuntu Nerd Font 12 
# exec dump_xsettings >~/.xsettingsd
# exec xsettingsd
exec /usr/lib/gnome-settings-daemon/gsd-xsettings
# exec mako

exec_always pkill kanshi; exec kanshi
# exec_always bash -c "killall kanshi; kanshi"
# exec xrdb -load ~/.Xresources
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term ~/.local/kitty.app/bin/kitty
# set $term env GLFW_IM_MODULE=ibus /opt/alacritty/alacritty 
# set $term kitty
set $term ~/Downloads/kitty-0.19.1-x86_64/bin/kitty
#
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu dmenu_path | wofi --show drun -i | xargs swaymsg exec --
# set $menu 'rofi -modi run, drun, window -show drun'
# set $menu wofi -i -I --show drun
set $menu "rofi -font 'InputMonoCondensed 16' -combi-modi window,drun -m $(swaymsg -t get_outputs | jq 'map(select(.active) | .focused) | index(true)') -show combi -modi combi -show-icons" 

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/local/share/backgrounds/sway/)
# set $background "/usr/local/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png"
# set $background "~/Downloads/alexandr-bormotin-FuHKcKoPl0c-unsplash.jpg"
set $background "~/Wallpapers/wallhaven-rd7drw.jpg"
output * bg $background fill
#
# Example configuration:
#
# output eDP-1 res 2560x1440 scale 1 pos 5120 0
# output DP-4 res 2560x1440 scale 1 pos 2560 0
# output DP-3 res 2560x1440 scale 1 pos 0 0
#
output eDP-1 res 2560x1440 scale 1 pos 0 0
# You can get the names of your outputs by running: swaymsg -t get_outputs


bindsym $mod+Control+l exec bash ~/.config/rofi/powermenu.sh 


### Idle configuration
#
# set $swaylock swaylock -i /usr/local/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png -s fill --ring-color 859900 --inside-wrong-color d33682
set $swaylock swaylock -i $background -s fill --ring-color 008599 --inside-wrong-color 991400 

exec_always pkill swayidle; exec swayidle -w \
          timeout 99999 '$swaylock -f' \
          timeout 99999 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
          before-sleep '$swaylock -f' 
# Example configuration:
#
# exec swayidle -w \
#          timeout 900 'swaylock -f -c 000000' \
#          timeout 900 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# ### Input configuration
input type:keyboard {
  xkb_layout us,ara
  xkb_options caps:swapescape,grp:alt_shift_toggle
  xkb_numlock enabled
}

# exec setxkbmap -option caps:swapescape

# japanese input
# exec_always bash -c "ibus exit;ibus-daemon -drx --panel /usr/lib/ibus/ibus-ui-gtk3"
# exec ibus-daemon -drx --panel /usr/lib/ibus/ibus-ui-gtk3
exec_always bash -c "ibus exit;ibus-daemon"


#set $MOUSE = 1133:49224:Logitech_G9_Laser_Mouse

# bindsym --whole-window BTN_RIGHT seat seat0 cursor press BTN_LEFT, seat seat0 cursor release BTN_LEFT
# bindsym --whole-window --release BTN_RIGHT seat seat0 cursor release BTN_LEFT


# bindsym --whole-window BTN_LEFT seat seat0 cursor press BTN_RIGHT, seat seat0 cursor release BTN_RIGHT
# bindsym --whole-window --release BTN_LEFT seat seat0 cursor release BTN_RIGHT
#
# Example configuration:
#
  input "2:7:SynPS/2_Synaptics_TouchPad" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      left_handed enabled
      tap_button_map lrm
  }

input "1133:49224:Logitech_G9_Laser_Mouse" {
  accel_profile flat
  left_handed enabled
  pointer_accel -0.7
  scroll_factor 5 
}

input "6899:1:Kingsis_Peripherals_ZOWIE_Gaming_mouse" {
  accel_profile flat
  pointer_accel 0.4 
  scroll_factor 5 
}

bindsym XF86MonBrightnessUp exec brightnessctl set +5%
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle # mute sound
bindcode 233 exec brightnessctl set +5%
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    focus_wrapping no
    set $next_workspace exec python3 ~/.config/sway/next_workspace.py
    
    # Move your focus around (vertical)
    bindsym $mod+$left $next_workspace -1
    bindsym $mod+$down $next_workspace -10
    bindsym $mod+$up $next_workspace 10
    bindsym $mod+$right $next_workspace 1

    bindcode $mod+43 $next_workspace -1
    bindcode $mod+46 $next_workspace 1

    # Move your focus around (horizontal)
    # bindsym $mod+$left $next_workspace -10
    # bindsym $mod+$down $next_workspace -1
    # bindsym $mod+$up $next_workspace 1
    # bindsym $mod+$right $next_workspace 10
    #
    # bindcode $mod+43 $next_workspace -10
    # bindcode $mod+46 $next_workspace 10

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right

    set $ws-right "$(( $( swaymsg -t get_workspaces | jq '.[] | select(.focused).num' ) + 1))";
    set $ws-left "$(( $( swaymsg -t get_workspaces | jq '.[] | select(.focused).num' ) - 1))";
    set $ws-up "$(( $( swaymsg -t get_workspaces | jq '.[] | select(.focused).num' ) + 10))";
    set $ws-down "$(( $( swaymsg -t get_workspaces | jq '.[] | select(.focused).num' ) - 10))";
    set $next_workspace "$(( python3 ~/.config/sway/next_workspace.py ))"

    bindsym $alt+$mod+$down exec swaymsg move container to workspace number $ws-down, exec swaymsg workspace number $ws-down
    bindsym $alt+$mod+$up exec swaymsg move container to workspace number $ws-up, exec swaymsg workspace number $ws-up
    bindsym $alt+$mod+$left exec swaymsg  move container to workspace number $ws-left, exec swaymsg workspace number $ws-left
    bindsym $alt+$mod+$right exec swaymsg move container to workspace number $ws-right, exec swaymsg workspace number $ws-right

    # Ditto, with arrow keys
    bindsym $alt+$left exec swaymsg workspace number $ws-left
    bindsym $alt+$down exec swaymsg workspace number $ws-down
    bindsym $alt+$up exec swaymsg workspace number $ws-up
    bindsym $alt+$right exec swaymsg workspace number $ws-right
#
# Workspaces:
#

    # assign [class="Electron" title="Developer Tools"] 2 
    # assign [class="Electron"] 6 

    # workspace 1 output DP-4
    # workspace 2 output DP-4
    # workspace 3 output DP-4
    # workspace 6 output DP-3
    # workspace 7 output DP-3
    # workspace 10 output eDP-1

    # auto move window to workpace
    # assign [class="Electron" title="Developer Tools"] 2 
    # assign [class="Electron"] 6 
    # assign [class="Google-chrome-unstable" window_role="browser"] 6 

    # for_window [class="Electron" title="Developer Tools"] move left, move left
    # for_window [class="Google-chrome-unstable" window_role="browser"] move right
    # for_window [class="Google-chrome-unstable"] move left 
    # for_window [class="Google-chrome-unstable"] focus left, split h, layout stacked
    # for_window [class="Electron"] floating disable
    # for_window [class="Electron"] floating enable 

    # VCoolor 
    for_window [app_id="yad"] floating enable 

    # this need to be the same as in .tridactylrc
    for_window [class="floatingAppFocus"] floating enable, resize set 50ppt 40ppt

    # move firefox window to right side
    for_window [title=Picture-in-Picture] floating disable
    for_window [title=Picture-in-Picture] resize set 35ppt
    # 
    # workspace 1 output DP-4 
    # workspace 2 output DP-4
    # workspace 3 output DP-4
    # workspace 6 output eDP-1
    # workspace 7 output eDP-1

    # mama home LG screen setup
    set $d1 eDP-1
    set $d2 HDMI-A-1

    workspace 1 output $d1
    workspace 2 output $d1
    workspace 3 output $d1
    workspace 4 output $d1
    workspace 5 output $d1
    workspace 6 output $d1
    workspace 7 output $d1
    workspace 8 output $d1
    workspace 9 output $d1
    workspace 10 output $d1

    workspace 11 output $d2
    workspace 12 output $d2
    workspace 13 output $d2
    workspace 14 output $d2
    workspace 15 output $d2
    workspace 16 output $d2
    workspace 17 output $d2
    workspace 18 output $d2
    workspace 19 output $d2
    workspace 20 output $d2

    set $x_switch exec python3 ~/.config/sway/i3-wk-switch.py
    set $change_workspace exec python3 ~/.config/sway/change_workspace.py
    set $move_container exec python3 ~/.config/sway/move_container.py

    exec python3 ~/.config/sway/mark_last_window.py

    # Switch to workspace
    bindsym $mod+1 $change_workspace 1
    bindsym $mod+2 $change_workspace 2
    bindsym $mod+3 $change_workspace 3
    bindsym $mod+4 $change_workspace 4
    bindsym $mod+5 $change_workspace 5
    bindsym $mod+6 $change_workspace 6
    bindsym $mod+7 $change_workspace 7
    bindsym $mod+8 $change_workspace 8
    bindsym $mod+9 $change_workspace 9
    # bindsym $mod+0 workspace 10
    bindsym $mod+0 $x_switch 20, $x_switch 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 $move_container 1
    bindsym $mod+Shift+2 $move_container 2
    bindsym $mod+Shift+3 $move_container 3
    bindsym $mod+Shift+4 $move_container 4
    bindsym $mod+Shift+5 $move_container 5
    bindsym $mod+Shift+6 $move_container 6
    bindsym $mod+Shift+7 $move_container 7
    bindsym $mod+Shift+8 $move_container 8
    bindsym $mod+Shift+9 $move_container 9
    bindsym $mod+Shift+0 $move_container 10

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    workspace 1
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+v splitt

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+u floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+u focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    # use F1, F2, ... to hide / show window same window
    bindsym $mod+Shift+F1 mark --add "___temp1", move scratchpad
    bindsym $mod+F1 [con_mark="^___temp1$"] scratchpad show
    bindsym $mod+Shift+F2 mark --add "___temp2", move scratchpad
    bindsym $mod+F2 [con_mark="^___temp2$"] scratchpad show
    bindsym $mod+Shift+F3 mark --add "___temp3", move scratchpad
    bindsym $mod+F3 [con_mark="^___temp3$"] scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 20px
    bindsym $down resize grow height 20px
    bindsym $up resize shrink height 20px
    bindsym $right resize grow width 20px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# resize to 1/3 of screen
bindsym $mod+i resize set 65ppt


set $mode_system L | lock\t\tE | logout\t\tS | suspend\t\tR | reboot\t\t SHIFT-S | shutdown \t\tSHIFT-R | UEFI
mode "$mode_system" {
    bindsym l exec swaylock -i $background fill --ring-color 859900 --inside-wrong-color d33682, mode "default"
    bindsym e exit
    bindsym s exec systemctl suspend, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec systemctl poweroff -i, mode "default"
    bindsym Shift+r exec systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

set $mode_screenshot O | focused output\t\tW | focused window\t\tS | selected area
mode "$mode_screenshot" {
    bindsym s exec ~/.config/sway/grimshot save area, mode "default"
    bindsym w exec ~/.config/sway/grimshot save window, mode "default"
    bindsym o exec ~/.config/sway/grimshot save output, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+p mode "$mode_screenshot"
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # position top
    # gaps 5 10

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

include /usr/local/etc/sway/config.d/*
