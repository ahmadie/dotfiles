#!/bin/bash
SCRIPTNAME=$(basename $0)
SCRIPTPATH="$( cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P )"


export FZF_DEFAULT_OPTS='--reverse --bind alt-j:down,alt-k:up,alt-u:up,alt-d:down,alt-i:toggle+up'

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS'  --color=fg:#cdd6f4,bg:-1,hl:#f38ba8:bold 
--color=fg+:#f5e0dc 
--color=info:#f38ba8,prompt:-1,pointer:#af5fff 
--color=marker:#f38ba8,spinner:#f5e0dc,header:#525252 
--color=border:#ed812d 
--preview-window=sharp 
--no-scrollbar 
--pointer=" " 
--marker="→" 
--prompt=" " 
--color=pointer:reverse,prompt:#cba6f7,input:159 
--color=fg+:bold,hl+:#f38ba8:bold'

rm_field_codes() {
    str=$1
    str=${str//\%f/}
    str=${str//\%F/}
    str=${str//\%u/}
    str=${str//\%U/}
    str=${str//\%d/}
    str=${str//\%D/}
    str=${str//\%n/}
    str=${str//\%N/}
    str=${str//\%i/}
    str=${str//\%c/}
    str=${str//\%k/}
    str=${str//\%v/}
    str=${str//\%m/}
    echo $str
}

# $THEME env variable set via sway config.

# check for env variable, if exists we are the
# forked shell, get the waiting string from the fifo
# and call fzf and sway from there.
prompt="Apps> "
header="Launch which app?"
if [[ -n $SMD_FIFO ]]; then
    rm -rf $SMD_FIFO

    declare -A name_to_exec
    for p in $(fd -H -i -t file --glob "*.desktop" \
        /usr/share/applications \
        /usr/local/share/applications \
        ~/.local/share/applications \
        /var/lib/flatpak/app 2> /dev/null); do
        
        # ignore /files directory for flatpak 
        if [[ "$p" == *"/files/share/applications"* ]]; then
            continue
        fi

        if [ ! -f "$p" ]; then
            continue
        fi
            
        readarray -t name_and_exec <<< $(cat $p | grep -m 2 -we "Name=.*" -we "Exec=.*" | sort)
        exec=${name_and_exec[0]#*=}
        name=${name_and_exec[1]#*=}
        if [[ -n $name ]] && [[ -n $exec ]];
        then
            name_to_exec[$name]=$exec
        fi
    done

    # build fzf string
    IFS=$'\n'
    apps=""
    for key in "${!name_to_exec[@]}"; do 
        ex=$(rm_field_codes ${name_to_exec[$key]})
        ex=${ex##*/}
        apps="$apps\n $key : $ex"
    done

    selection=$(printf $apps | fzf )
    selection=$(echo $selection | xargs echo -n)
    selection=${selection% :*}
    if [[ -z $selection ]]; then
        exit
    fi
    ex=$(rm_field_codes ${name_to_exec[$selection]})
    setsid --fork bash -c $ex &> /dev/null
fi

lines=14
columns=$((columns+"${#header}"+100))
if [[ columns -gt 100 ]];
then
    columns=100
fi

# create fifo and launch a terminal with the title "fzf-switcher"
# run the script in the new terminal which will see the env vars
# and execute the first if block in this script.
fifo=/tmp/std-$(date +%s)
mkfifo $fifo
SMD_FIFO=$fifo /bin/bash -c "alacritty \
    -o window.dimensions.columns=$columns \
    -o window.dimensions.lines=$lines \
    -o window.padding.y=10 \
    -o window.opacity=0.9 \
    -o font.size=13 \
    --title "fzf-switcher" \
    -e $SCRIPTPATH/$SCRIPTNAME"&
